var db = require('controllers/database');
var mongoose = require('mongoose');
var downloads = mongoose.model('downloads');
var demands = mongoose.model('demands');
var users = mongoose.model('users');

exports.getDownloadEnd = function(country,city,callback) {
	downloads.find({country:country,city:city,status:true},function(err,data){
		if(data.length != 0){
			callback({'res':true,'data':data});
		}else{
			callback({'res':false});
		}
	});
}

exports.getDownload = function(name,date,country,city,status,callback) {
	var xstatus = false;
	var xdate = date.split("/");
	if (status == 'Download complete') {
		xstatus = true;
	} else if (status == 'Download pending') {
		xstatus = false;
	}
	console.log(Date.now(parseInt(xdate[0]),parseInt(xdate[1])-1,parseInt(xdate[2])));
	if (!name) {
		downloads.find({country:country,city:city,status:xstatus},function(err,data){
			if(data.length != 0){
				var dateNew = new Date(parseInt(xdate[0]),parseInt(xdate[1])-1,parseInt(xdate[2]));
				var dateAndroid = Date.now(dateNew) + 86400000;
				var dataDownload = [];
	      for (i = 0; i < data.length; i++) {
					var xx = new Date(data[i].date)
					var dataDB = Date.now(xx) + 86400000;
					console.log(dataDB);
					if (dataDB >= dateAndroid) {
						dataDownload.push({'_id':data[i]._id,'name':data[i].name,'size':data[i].size,'date':data[i].date,'status':data[i].status});
					}
	      }
				callback({'res':true,'data':dataDownload});
			}else{
				callback({'res':false});
			}
		});
	} else {
		downloads.find({name:name.toLowerCase(),date:{$gte:new Date(xdate[0],xdate[1],xdate[2])},country:country,city:city,status:xstatus},function(err,data){
			if(data.length != 0){
				callback({'res':true,'data':data});
			}else{
				callback({'res':false});
			}
		});
	}
}

exports.addDownload = function(name,size,token,username,city,country,callback) {
	var idObject = mongoose.Types.ObjectId();
	var newdownload = new downloads({
		_id: idObject,
		name: name,
		size: size,
		date: new Date(),
		status: false,
		token: token,
	 	username: username,
		city: city,
		country: country,
	});
	var newdemand = new demands({
		idService: idObject,
		service: "Download",
		name: name,
		token: token,
		username: username,
		main: true,
		status: false,
		notify: false,
		pt: 0,
		index: 0
	});

	newdownload.save(function (err){
		if(err) {
			callback({'res':false, 'response':"Error Downloads, you have not added a new download."});
		}else{
			newdemand.save(function (err){
				if(err) {
					callback({'res':false, 'response':"Error Demands, you have not added a new download."});
				}else{
					callback({'res':true, 'response':"Successfully Downloads, you have added a new download."});
				}
			});
		}
	});
}
