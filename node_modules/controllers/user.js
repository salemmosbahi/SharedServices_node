var db = require('controllers/database');
var mongoose = require('mongoose');
var users = mongoose.model('users');
var encryption	= require('../../route/encryption');
var crypto = require('crypto');
var rand = require('csprng');

exports.signup = function(picture,fname,lname,gender,dateN,country,city,email,password,phone,driver,callback){
  var temp = rand(160,36);
  var hashed_password = crypto.createHash('sha512').update(temp + password).digest("hex");
  var newUser = new users({fname:fname,lname:lname,gender:gender,dateN:dateN,country:country,city:city,
    email:email,password:hashed_password,phone:phone,driver:driver,picture:picture,
    ptd:0,pttd:5,
		ptc:0,pttc:5,
		pte:0,ptte:5,
    ptp:0,pttp:5,
    connected:false,salt:temp });
  users.find({email:email},function(err,data){
    if(data.length == 0){
      newUser.save(function(err){
          if(err){
            callback({'res':false,'response':"Error Users, you have not added a new user."});
          }else{
            callback({'res':true,'response':"Successfully Users, you have added a new user."});
          }
        });
    }else{
      callback({'res':false,'response':"Error Users, Email already registered."});
    }
  });
}

exports.login = function(email,password,callback){
  users.find({email:email},function(err,data){
    if(data.length != 0){
      var token = data[0]._id;
      var fname = data[0].fname;
      var lname = data[0].lname;
      var dateN = data[0].dateN;
      var country = data[0].country;
      var city = data[0].city;
      var picture = data[0].picture;
      var hash_db = data[0].password;
      var temp = data[0].salt;
      var connected = data[0].connected;
      var hashed_password = crypto.createHash('sha512').update(temp + password).digest("hex");
      if(hash_db == hashed_password){
        if(!connected){
          var keyVitual = encryption.keyVirtual();
          var key = encryption.key(keyVitual);
          users.update({_id:token},{$set:{connected:true}},function(err){
            if(err){
              callback({'res':false,'response':"Error Users, you have not connected this user."});
            }else{
              callback({'res':true,'response':"Successfully Users, login.",'key':keyVitual,
                'token':token,'fname':encryption.encode(fname,key),'lname':encryption.encode(lname,key),
                'dateN':encryption.encode(dateN,key),'country':encryption.encode(country,key),
                'city':encryption.encode(city,key),'picture':picture});
            }
          });
        }else{
          callback({'res':false,'response':"Error Users, the user is logged into another device."});
        }
      }else{
        callback({'res':false,'response':"Error Users, invalid password."});
      }
    }else{
      callback({'res':false,'response':"Error Users, user not exist verify your Email."});
    }
  });
}

exports.logout = function(token,callback){
  users.update({_id:token},{$set:{connected:false}}, {multi:true},function(err){
    if(err){
      callback({'res':false});
    }else{
      callback({'res':true});
    }
  });
}

exports.profile = function(token,callback){
  users.find({_id:token},function(err,data){
    if(data.length != 0){
      var fname = data[0].fname;
      var lname = data[0].lname;
      var gender = data[0].gender;
      var dateN = data[0].dateN;
      var country = data[0].country;
      var city = data[0].city;
      var email = data[0].email;
      var phone = data[0].phone;
      var driver = data[0].driver;
      var picture = data[0].picture;
      var ptd = data[0].ptd; var pttd = data[0].pttd;
      var ptc = data[0].ptc; var pttc = data[0].pttc;
      var pte = data[0].pte; var ptte = data[0].ptte;
      var ptp = data[0].ptp; var pttp = data[0].pttp;
      var point = ptd + ptc + pte + ptp; var pointTotal = pttd + pttc + ptte + pttp;
      var pt = (5 * point) / pointTotal;
      var keyVitual = encryption.keyVirtual();
      var key = encryption.key(keyVitual);
      callback({'res':true,'key':keyVitual,'fname':encryption.encode(fname,key),'lname':encryption.encode(lname,key),
        'gender':encryption.encode(gender,key),'dateN':encryption.encode(dateN,key),'country':encryption.encode(country,key),
        'city':encryption.encode(city,key),'email':encryption.encode(email,key),'phone':encryption.encode(phone,key),
        'driver':driver,'pt':pt.toString(),'picture':picture});
    }else{
      callback({'res':false});
    }
  });
}

exports.profileVisitor = function(token,service,callback){
  users.find({_id:token},function(err,data){
    if(data.length != 0){
      var fname = data[0].fname;
      var lname = data[0].lname;
      var gender = data[0].gender;
      var dateN = data[0].dateN;
      var country = data[0].country;
      var city = data[0].city;
      var email = data[0].email;
      var phone = data[0].phone;
      var driver = data[0].driver;
      var picture = data[0].picture;
      var ptd = data[0].ptd; var pttd = data[0].pttd;
      var ptc = data[0].ptc; var pttc = data[0].pttc;
      var pte = data[0].pte; var ptte = data[0].ptte;
      var ptp = data[0].ptp; var pttp = data[0].pttp;
      var point = ptd + ptc + pte + ptp; var pointTotal = pttd + pttc + ptte + pttp;
      var pt = (5 * point) / pointTotal;
      var ptService = 0;
      if (service === 'Car') {
        ptService = (5 * ptc) / pttc;
      } else if(service === 'Download') {
        ptService = (5 * ptd) / pttd;
      } else if(service === 'Event') {
        ptService = (5 * pte) / ptte;
      } else if(service === 'Paper') {
        ptService = (5 * ptp) / pttp;
      }
      var keyVitual = encryption.keyVirtual();
      var key = encryption.key(keyVitual);
      callback({'res':true,'key':keyVitual,'fname':encryption.encode(fname,key),'lname':encryption.encode(lname,key),
        'gender':encryption.encode(gender,key),'dateN':encryption.encode(dateN,key),'country':encryption.encode(country,key),
        'city':encryption.encode(city,key),'email':encryption.encode(email,key),'phone':encryption.encode(phone,key),
        'driver':driver,'ptService':ptService.toString(),'pt':pt.toString(),'picture':picture});
    }else{
      callback({'res':false});
    }
  });
}
