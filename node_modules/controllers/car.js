var db = require('controllers/database');
var mongoose = require('mongoose');
var cars = mongoose.model('cars');
var demands = mongoose.model('demands');
var users = mongoose.model('users');

exports.getCarEnd = function(country,depart,callback) {
	cars.find({country:country,depart:depart,status:'complete'},function(err,data){
		if(data.length != 0){
			callback({'res':true,'data':data});
		}else{
			callback({'res':false});
		}
	});
}

exports.getCar = function(country,depart,destination,date,status,goingComing,highway,callback) {
	var oneDay = 86400000;//1000*60*60*24
	var dateApp = (new Date(date)).getTime();
  var xstatus = '';
	if (status == 'Car complete') {
		xstatus = 'complete';
	} else if (status == 'Car pending') {
		xstatus = 'pending';
	}
	if (!name) {
		cars.find({country:country,city:city,status:xstatus},function(err,data){
			if(data.length != 0){
				var dataCar = [];
	      for (i = 0; i < data.length; i++) {
					var dateDB = (data[i].date).getTime();
					var diffrence = (dateDB - dateApp) / oneDay;
					if (diffrence >= 0) {
						dataCar.push({'_id':data[i]._id,'picture':data[i].picture,'name':data[i].name,'size':data[i].size,'date':data[i].date,'status':data[i].status});
					}
	      }
				callback({'res':true,'data':dataCar});
			}else{
				callback({'res':false});
			}
		}).sort({date:-1});
	} else {
		cars.find({name:{$regex:new RegExp(name.toLowerCase(), "i")},country:country,city:city,status:xstatus},function(err,data){
			if(data.length != 0){
				var dataCar = [];
	      for (i = 0; i < data.length; i++) {
					var dateDB = (data[i].date).getTime();
					var diffrence = (dateDB - dateApp) / oneDay;
					if (diffrence >= 0) {
						dataCar.push({'_id':data[i]._id,'picture':data[i].picture,'name':data[i].name,'size':data[i].size,'date':data[i].date,'status':data[i].status});
					}
	      }
				callback({'res':true,'data':dataCar});
			}else{
				callback({'res':false});
			}
		}).sort({date:-1});
	}
}

exports.addCar = function(model,description,country,depart,destination,date,time,goingComing,highway,place,token,username,callback) {
	var idObject = mongoose.Types.ObjectId();
	var newCar = new cars({
		_id: idObject,
		picture: picture,
		name: name,
		size: size,
		date: new Date(),
		dateComplete: null,
		status: 'pending',
		token: token,
	 	username: username,
		city: city,
		country: country,
	});
	var newdemand = new demands({
		idService: idObject,
		service: "Car",
		name: name,
		token: token,
		username: username,
		date: date,
		main: true,
		usernameMain: username,
		status: 'pending',
		notify: false,
		pt: 0,
		index: 0
	});

	newCar.save(function (err){
		if(err) {
			callback({'res':false, 'response':"Error Cars, you have not added a new car."});
		}else{
			newdemand.save(function (err){
				if(err) {
					callback({'res':false, 'response':"Error Demands, you have not added a new car."});
				}else{
					callback({'res':true, 'response':"Successfully Cars, you have added a new car."});
				}
			});
		}
	});
}

exports.getCarProfile = function(id,callback) {
	cars.find({_id:id},function(err,data){
		if (data.length != 0) {
			callback({'res':true,'data':data});
		}else {
			callback({'res':false});
		}
	});
}

exports.completeCar = function(idService,token,callback) {
	var dateObj = new Date();
	cars.update({_id:idService}, {$set:{status:'complete', dateComplete:dateObj}},function(err){
		if (err) {
			callback({'res':false, 'response':"Error Cars, you have not completed a new car."});
		} else {
			demands.update({idService:idService, status:'pending'}, {$set:{status:'refuse', notify:false, index:0}}, {multi:true},function(err){
				if (err) {
					callback({'res':false, 'response':"Error Demands, you have not completed this car."});
				} else {
					users.update({_id:token}, {$inc:{ptd:40,pttd:40}},function(err){
						if (err) {
							callback({'res':false, 'response':"Error Users, you have not completed this car."});
						} else {
							callback({'res':true, 'dateComplete':dateObj,'response':"Successfully Cars, you have completed this car."});
						}
					});
				}
			});
		}
	});
}
